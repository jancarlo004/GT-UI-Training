import { WorkersCompensationWizard } from "../../pages/WorkingCompensationWizard";
import { AutoGeneratedCustomMethod } from "../../util/AutoGeneratedCustomMethod";
import { CustomMethod } from "../../util/CustomMethod";
import { PcfComponent } from "@gtui/gt-ui-framework";
import world from "../../util/world";
import { t } from "testcafe";
import { FNOLWizard } from "../../../../ignite/previousGeneratedOutput/classFiles/claimsolutions/pages/claim/FNOLWizard";
import { ClaimTabBar } from "../../../../ignite/previousGeneratedOutput/classFiles/claimsolutions/pages/navigation/tabBar/ClaimTabBar";
import { NewContactPopup } from "../../../../ignite/previousGeneratedOutput/classFiles/claimsolutions/pages/popup/New/NewContactPopup";


const autoGeneratedCustomMethod  = new AutoGeneratedCustomMethod();
const workingCompensationWizard = new WorkersCompensationWizard();
const newContactPopup = new NewContactPopup();
const customMethod = new CustomMethod();
const fnolWizard = new FNOLWizard();
const claimTabBar = new ClaimTabBar();


export class WCClaimScenario{

    async WCClaimCreation(){

        await t.click(claimTabBar.tabBarClaimTab.component.find('.gw-action--expand-button'));
        await claimTabBar.claimTabClaimTab_FNOLWizard.click();

        //+----------Step 1: Search or Create Policy Screen----------+
        await fnolWizard.fNOLWizardFindPolicyPanelSetpolicyNumber_2.setValue(world.InsuranceInfo.policyNumber);
        await fnolWizard.fNOLWizardFindPolicyPanelSetSearch.click();
        await fnolWizard.fNOLWizardFindPolicyPanelSetClaim_LossDate.setValue(await customMethod.getCurrentDate());

        await fnolWizard.fNOLWizardNext.click(); //Next button
9
        //+----------Basic etails Screen----------+
        await fnolWizard.fNOLWizard_BasicInfoScreenClaim_LocationCode.selectOptionByLabel('1 (2287 Moore Avenue, Euless, TX 76039)');
        await workingCompensationWizard.reportedName.selectOptionByLabel(world.PrimaryInsuredInformation.PersonalInfo.fullName);
        await workingCompensationWizard.injuredWorkerNameMenuIcon.click();
        await fnolWizard.fNOLWizardFullWizardStepSetFNOLWizard_BasicInfoScreenClaimant_NameClaimNewPersonOnlyPickerMenuItemSetClaimNewPersonOnlyPickerMenuItemSet_NewPersonMenuItem.click();
        await newContactPopup.newContactPopupContactDetailScreenContactBasicsDVPersonNameInputSetGlobalPersonNameInputSetFirstName.setValue(await autoGeneratedCustomMethod.generateRandomText(10));
        await newContactPopup.newContactPopupContactDetailScreenContactBasicsDVPersonNameInputSetGlobalPersonNameInputSetLastName.setValue(await autoGeneratedCustomMethod.generateRandomText(10));

        //Filling up the Contact Info
        await newContactPopup.newContactPopupContactDetailScreenContactBasicsDVPersonContactInfoInputSetHomeGlobalPhoneInputSetNationalSubscriberNumber.setValue(await autoGeneratedCustomMethod.generateHomePhoneNumber());
        await newContactPopup.newContactPopupContactDetailScreenContactBasicsDVPersonContactInfoInputSetPrimary.setValue(await autoGeneratedCustomMethod.generatePrimaryEmail(world.PrimaryInsuredInformation.PersonalInfo.fullName));

        //Filling up the Address Info
        await newContactPopup.newContactPopupContactDetailScreenContactBasicsDVPrimaryAddressInputSetCCAddressInputSetglobalAddressContainerglobalAddressGlobalAddressInputSetAddressLine1.setValue('4904 Oliver Street');
        await newContactPopup.newContactPopupContactDetailScreenContactBasicsDVPrimaryAddressInputSetCCAddressInputSetglobalAddressContainerglobalAddressGlobalAddressInputSetCity.setValue('Eules');
        await newContactPopup.newContactPopupContactDetailScreenContactBasicsDVPrimaryAddressInputSetCCAddressInputSetglobalAddressContainerglobalAddressGlobalAddressInputSetCounty.setValue('Tarrant');
        await newContactPopup.newContactPopupContactDetailScreenContactBasicsDVPrimaryAddressInputSetCCAddressInputSetglobalAddressContainerglobalAddressGlobalAddressInputSetState.click();
        await newContactPopup.newContactPopupContactDetailScreenContactBasicsDVPrimaryAddressInputSetCCAddressInputSetglobalAddressContainerglobalAddressGlobalAddressInputSetState.selectOptionByLabel('Texas');
        await t.typeText(newContactPopup.newContactPopupContactDetailScreenContactBasicsDVPrimaryAddressInputSetCCAddressInputSetglobalAddressContainerglobalAddressGlobalAddressInputSetState.component.parent().sibling().find('div[id$="-PostalCode"]'), '76039');
        await newContactPopup.newContactPopupContactDetailScreenContactBasicsDVPrimaryAddressInputSetCCAddressInputSetglobalAddressContainerAddress_AddressType.click();
        await newContactPopup.newContactPopupContactDetailScreenContactBasicsDVPrimaryAddressInputSetCCAddressInputSetglobalAddressContainerAddress_AddressType.selectOptionByLabel('Home');

        await newContactPopup.newContactPopupContactDetailScreenContactBasicsDV_tbContactDetailToolbarButtonSetCustomUpdateButton.click();


        await fnolWizard.fNOLWizardNext.click(); //Next button

        //+----------Loss Details Screen----------+
        await t.typeText(fnolWizard.fNOLWizard_NewLossDetailsScreenDateReportedtoEmployer.component.find('input[name$="-DateReportedtoEmployer"]'), world.Date.currentDate);
        await t.typeText(fnolWizard.fNOLWizard_NewLossDetailsScreenDateReportedtoEmployer.component.find('input[name$="-DateReportedtoEmployer_time"]'), '12:00');
        await t.click(fnolWizard.fNOLWizard_NewLossDetailsScreenDateReportedtoEmployer.component.find('.gw-DateValueWidget--ampm-button'));
        await PcfComponent(fnolWizard.fNOLWizard_NewLossDetailsScreenInjurySeverity_TimeLossReport.component.find('input[id$="-InjurySeverity_TimeLossReport_0"]')).click();
        await PcfComponent(fnolWizard.fNOLWizard_NewLossDetailsScreenInjurySeverity_DeathReport.component.find('input[id$="-InjurySeverity_DeathReport_1"]')).click();
        await fnolWizard.fNOLWizard_NewLossDetailsScreenClaim_InjuryDescription.setValue('Sprained both ankle');
        await fnolWizard.fNOLWizard_NewLossDetailsScreenClaim_Severity.selectOptionByLabel('Minor');
        await fnolWizard.fNOLWizard_NewLossDetailsScreenClaim_InjuryIllnessCause.selectOptionByLabel('Strain or injury by');
        await fnolWizard.fNOLWizard_NewLossDetailsScreenClaim_AccidentType.selectOptionByLabel('Strain or injury by jumping');
        await PcfComponent(fnolWizard.fNOLWizard_NewLossDetailsScreenInjurySeverity_MedicalReport.component.find('input[id$="-InjurySeverity_MedicalReport_0"]')).click();

        await fnolWizard.fNOLWizardNext.click(); //Next button
        await fnolWizard.fNOLWizardFinish.click();



    }

    async claimValidation(){

        let verifiedWords = 'New Claim Saved';
        let verifyThisWord = await claimTabBar.tabBarClaimTab.component.parent().sibling().find('div[id$="-ttlBar"]').find('.gw-TitleBar--title').innerText;
        console.log(verifyThisWord);

        await t.expect(verifiedWords).contains(verifyThisWord, 'Unsuccessfully Claim Transactsion');
        console.log("Claim successfully filed");
        await t.pressKey('alt+v');
        await this.getClaimNumber();

    }

    async getClaimNumber(){

        let claimNumber = await claimTabBar.tabBarClaimTab.component.find('.gw-label').innerText; 
        let characterElements = '0123456789';
        let generatedClaimNumber = '';
        console.log(claimNumber);
      
            
        claimNumber.split("").forEach(claimElements => {
                
           characterElements.split("").forEach(charElement => {
                    
                if(claimElements == charElement){

                    generatedClaimNumber += claimElements;

                }

            });

        });

        console.log('Claim Number: ',generatedClaimNumber);
        world.InsuranceInfo.ClaimInfo.claimNumber = generatedClaimNumber;

        }

}
