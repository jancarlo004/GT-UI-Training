import { t } from "testcafe";
import world from "../../util/world";
import { PcfButton, PcfComponent, PcfTextInput } from "@gtui/gt-ui-framework";
import { FNOLWizard } from "../../../../ignite/previousGeneratedOutput/classFiles/claimsolutions/pages/claim/FNOLWizard";
import { ClaimTabBar } from "../../../../ignite/previousGeneratedOutput/classFiles/claimsolutions/pages/navigation/tabBar/ClaimTabBar"
import { WorkersCompensationWizard } from "../../pages/WorkingCompensationWizard";
import { AutoGeneratedCustomMethod } from "../../util/AutoGeneratedCustomMethod";
import { NewContactPopup } from "../../../../ignite/previousGeneratedOutput/classFiles/claimsolutions/pages/popup/New/NewContactPopup";
import { CustomMethod } from "../../util/CustomMethod";

const fnolWizard = new FNOLWizard();
const claimTabBar = new ClaimTabBar();
const customMethod = new CustomMethod();
const newContactPopup = new NewContactPopup();
const workingCompensationWizard = new WorkersCompensationWizard();
const autoGeneratedCustomMethod  = new AutoGeneratedCustomMethod();

export class WCClaimScenario{

    async WCClaimCreation(){

        await t.click(claimTabBar.tabBarClaimTab.component.find('.gw-action--expand-button'));
        await claimTabBar.claimTabClaimTab_FNOLWizard.click();

        //+----------Step 1: Search or Create Policy Screen----------+
        await fnolWizard.fNOLWizardFindPolicyPanelSetpolicyNumber_2.setValue(world.InsuranceInfo.PolicyInfo.PersonalAuto.policyNumber);
        await fnolWizard.fNOLWizardFindPolicyPanelSetSearch.click();
        await fnolWizard.fNOLWizardFindPolicyPanelSetClaim_LossDate.setValue(await customMethod.getCurrentDate());

        await fnolWizard.fNOLWizardNext.click(); //Next button

        //+----------Basic etails Screen----------+
        await fnolWizard.fNOLWizard_BasicInfoScreenClaim_LocationCode.selectOptionByLabel('1 (2287 Moore Avenue, Euless, TX 76039)');
        await workingCompensationWizard.reportedName.selectOptionByLabel(world.PrimaryInsuredInformation.PersonalInfo.fullName)
        await workingCompensationWizard.injuredWorkerNameMenuIcon.click();
        await fnolWizard.fNOLWizardFullWizardStepSetFNOLWizard_BasicInfoScreenClaimant_NameClaimNewPersonOnlyPickerMenuItemSetClaimNewPersonOnlyPickerMenuItemSet_NewPersonMenuItem.click();
        await newContactPopup.newContactPopupContactDetailScreenContactBasicsDVPersonNameInputSetGlobalPersonNameInputSetFirstName.setValue(await autoGeneratedCustomMethod.generateRandomText(10));
        await newContactPopup.newContactPopupContactDetailScreenContactBasicsDVPersonNameInputSetGlobalPersonNameInputSetLastName.setValue(await autoGeneratedCustomMethod.generateRandomText(10));
        await newContactPopup.newContactPopupContactDetailScreenContactBasicsDV_tbContactDetailToolbarButtonSetCustomUpdateButton.click();

        await fnolWizard.fNOLWizardNext.click(); //Next button

        //+----------Loss Details Screen----------+
        await t.typeText(fnolWizard.fNOLWizard_NewLossDetailsScreenDateReportedtoEmployer.component.find('input[name$="-DateReportedtoEmployer"]'), world.Date.currentDate);
        await t.typeText(fnolWizard.fNOLWizard_NewLossDetailsScreenDateReportedtoEmployer.component.find('input[name$="-DateReportedtoEmployer_time"]'), '12:00');
        await t.click(fnolWizard.fNOLWizard_NewLossDetailsScreenDateReportedtoEmployer.component.find('.gw-DateValueWidget--ampm-button'));
        await PcfComponent(fnolWizard.fNOLWizard_NewLossDetailsScreenInjurySeverity_TimeLossReport.component.find('input[id$="-InjurySeverity_TimeLossReport_0"]')).click();
        await PcfComponent(fnolWizard.fNOLWizard_NewLossDetailsScreenInjurySeverity_DeathReport.component.find('input[id$="-InjurySeverity_DeathReport_1"]')).click();
        await fnolWizard.fNOLWizard_NewLossDetailsScreenClaim_InjuryIllnessCause.selectOptionByLabel('Strain or injury by');
        await fnolWizard.fNOLWizard_NewLossDetailsScreenClaim_AccidentType.selectOptionByLabel('Strain or injury by jumping');
        await PcfComponent(fnolWizard.fNOLWizard_NewLossDetailsScreenInjurySeverity_MedicalReport.component.find('input[id$="-InjurySeverity_MedicalReport_0"]')).click();

        await fnolWizard.fNOLWizardNext.click(); //Next button
        await fnolWizard.fNOLWizardFinish.click();

        await t.debug();

    }

    async claimValidation(){

        let verifiedWords = 'New Claim Saved';
        let verifyThisWord = await claimTabBar.tabBarClaimTab.component.parent().sibling().find('div[id$="-ttlBar"]').find('.gw-TitleBar--title').innerText;

        await t.expect(verifiedWords).contains(verifyThisWord, 'Unsuccessfully Claim Transactsion');
     
    }

}